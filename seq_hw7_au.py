#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
@author: alexandriaudenkwo
"""

import numpy as np

seq1 = "GCAAGCGTTGTCCGGATTTATTGGGCGTAAAGGGAACGCAGGCGGTCTTTTAAGTCTGATGTGAAAGCCTTCGGCTTAACCGGAGTAGTGCATTGGAAACTGGAAGACTTGAGTGCAGAAGAGGAGAGTGGAACTC"
seq2 = "GCAAGCGTTGTCCGGATTTATTGGGCGTAAAGGGAACGCAGGCGGTCTTTTAAGTCTGATGTGAAAGCCTTCGGCTTAACCGGAGTAGTGCATTGGAAACTGGAAGACTTGAGTGCGGAAGAGGAGAGTGGAACTC"
seq3 = "GCAAGCGTTGTCCGGATTTATTGGGCGTAAAGGGAACGCAGGCGGTCTTTTAAGTCTGATGTGAAAGCCTTCGGCTTAACCGGAGTAGTGCATTGGAAACTGGAAGACTTGAGTGCAGAAGAGGAGAGTGGAACTC"
seq4 = "GCAAGCGTTGTCCGGATTTATTGGGCGTAAAGGGAACGCAGGCGGTCTTTTAAGTCTGATGTGAAAGCCTTCGGCTTAACCGGAGTAGTGCATTGGAAACTGGAAGACTTGAGTGCGGAAGAGGAGAGTGGAACTC"
seq5 = "GCAAGCGTTGTCCGGATTTATTGGGCGTAAAGGGAACGCAGGCGGTCTTTTAAGTCTGATGTGAAAGCCTTCGGCTTAAACGGAGTAGTGCATTGGAAACTGGAAGACTTGAGTGCGGAAGAGGAGAGTGGAACTC"
seq6 = "GCAAGCGTTGTCCGGATTTATTGGGAGTAAAGGGAACGCAGGCGGTCTTTTAAGTCTGATGTGAAAGCCTTCGGCTTAACCGGAGTAGTGCATTGGAAACTGGAAGACTTGAGTGCAGAAGAGGAGAGTGGAACTC"
seq7 = "GCAAGCGTTGTCCGGATTTATTGGGCGTAAAGGGAACGCAGGCGGTCTTTTAAGTCTGATGTGAAAGCCTTCGGCTTAACCGGAGTAGTGCATTGGAAACTGGAAGACTTGAGTGCAGAAGAGGAGAGTGGAACTC"
seq8 = "GCAAGCGTTATCCGGATTTATTGGGCATAAAGGGAACGCAGGCGGTCTTTTAAGTCTGATGTGAAAGCCTTCGGCTTAACCGGAGTAGTGCATTGGAAACTGGGAGACTTGAGTGCAGAAGAGGAGAGTGGAACTC"
seq9 = "GCAAGCGTTGTCCGGATTTATTGGGCGTAAAGGGAACGCAGGCGGTCTTTTAAGTCTGATGTGAAAGCCTTCGGCTTAACCGGAGTAGTGCATTGGAAACTGGAAGACTTGAGTGCAGAAGAGGAGAGTGGAACTC"
seq10 = "GCAAGCGTTGTCCGGATTTATTGGGCGTAAAGGGAACGCAGGCGGTCTTTTAAGTCTGATGTGAAAGCCTTCGGCTTAACCGGAGTAGTGCATTGGAAACTGGAAGACTTGAGTGCGGAAGAGGAGAGTGGAACTC"


qual1 = "EEEEEEEEEEEEEEEEEEEEEEEAEEEEEEEEEEEEEEEEEEEEEEEEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAEEEEEEEEEEEEA<EEEEAEEEEEEEEEEEEEEEEEE"
qual2 = "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEEEEEAAAEEEEEEEAEEA"
qual3 = "EEEEEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE/</AEE/EEEEEEAEEEEAEE6/A6EEEEEEEAAE/6AE<EEE/EEA/6EE<EEE<E//EE6<A/EEA//E<EE/E/E/E<E/"
qual4 = "EEEEEEEEEEEEEEEEEEEAEEEEEEEEEEEEEEEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAEEEEEEEEEEEEEEEEEEAEEEEEEEEEEEEEEEEEEEEEEEEEEAEEAAAAEEEEEEEEE/"
qual5 = "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE6EEEEEE/EEEEEEEEEEEEEEEEEEEEEEEAEEEEEEAAEEEEEEEEEEEAEEAEA"
qual6 = "EEEEEEEEE/EEEEEEEEEEEEEEE2EEEEEEEEEEEEEEEEEEE/E//AAEEEE/AEEEEEEEEEA/E/EEEEEE/EAEEAE/E/EAEEEEEEE/EEEEEEE6//EEEEEEEEE<EAEEEEEEE/6E/EEEE<A<"
qual7 = "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEA/EAE/EEEE/EEAEEEEEEEEAAEEEAE/EEEE/A/AEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAEAEEEEEEAEEEEEAAEEEEEEEEEEE"
qual8 = "EEEEEEEEEEEEEEEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE6EEEEEEEEEEEEAAEEEEEEEEEEEEEAEEEEAEEEEEEEEEEEEEAEEEEAAAEEEEA"
qual9 = "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAEEEEEEEEEEEEEEEEAEEEEEEEEEA<AEEEEAEEEEAAEEEAEE"
qual10 = "EEEEEEEEEEEEEEEEEEE<EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAA<EAEE<AAAEEEEAEEEEE"

#char = !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~

def letter(currentqual):
    if len(currentqual) == 1:
        qualtype = []
        qualtype.append(currentqual)
    else:
        qualtype = letter(currentqual[0:len(currentqual)-1])
        if (currentqual[len(currentqual) -1] in qualtype) == False:
            qualtype.append(currentqual[len(currentqual)-1])
            
    return qualtype


def main():
    seqlen = len(seq1)
    
    allseq = [seq1,seq2,seq3,seq4,seq5,seq6,seq7,seq8,seq9,seq10]
    allqual = [qual1,qual2,qual3,qual4,qual5,qual6,qual7,qual8,qual9,qual10]
    
    qualscoreletter = [] #goal maybe there's six
    
    dif = [[],[],[],[],[],[],[],[],[],[]]
    full_qual = ''
    for i in range(len(allqual)):
        full_qual = full_qual+allqual[i]
    temp_list = letter(full_qual)
    print(temp_list)
    
    for j in range(10):
        compare = allseq[0]
        currentseq = allseq[j]
        currentqual = allqual[j]
        # qualscoreletter.append(letter(currentqual))
        # print(qualscoreletter)
        for i in range(seqlen):
            if compare[i] != currentseq[i]:
                print("Current seq" , j+1)
                print("Discrepancy happens at", i+1)
                print("Seq 1 nucleotide", compare[i])
                print("Seq" + str(j+1)+" nucleotide", currentseq[i])
                print("quality symbol for current seq is ", currentqual[i])
                print("quality symbol for seq 1 is ", allqual[0][i])
                dif[j].append(['seq'+str(j+1),i,compare[i],currentseq[i],currentqual[i], allqual[0][i]])
      
    # for k in range(len(qualscoreletter)):
    #     np.where()

            
main()
            
            
            
            
            
        